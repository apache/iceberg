#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: "Delta Conversion CI"
on:
  push:
    branches:
      - 'main'
      - '0.**'
    tags:
      - 'apache-iceberg-**'
  pull_request:
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/workflows/api-binary-compatibility.yml'
      - '.github/workflows/flink-ci.yml'
      - '.github/workflows/hive-ci.yml'
      - '.github/workflows/java-ci.yml'
      - '.github/workflows/jmh-benchmarks-ci.yml'
      - '.github/workflows/labeler.yml'
      - '.github/workflows/licence-check.yml'
      - '.github/workflows/open-api.yml'
      - '.github/workflows/publish-snapshot.yml'
      - '.github/workflows/recurring-jmh-benchmarks.yml'
      - '.github/workflows/site-ci.yml'
      - '.github/workflows/spark-ci.yml'
      - '.github/workflows/stale.yml'
      - '.gitignore'
      - '.asf.yml'
      - 'dev/**'
      - 'mr/**'
      - 'hive3/**'
      - 'hive3-orc-bundle/**'
      - 'hive-runtime/**'
      - 'flink/**'
      - 'pig/**'
      - 'docs/**'
      - 'site/**'
      - 'open-api/**'
      - 'format/**'
      - '.gitattributes'
      - 'README.md'
      - 'CONTRIBUTING.md'
      - 'LICENSE'
      - 'NOTICE'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  delta-conversion-scala-2-12-tests:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        jvm: [8, 11, 17]
    env:
      SPARK_LOCAL_IP: localhost
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: ${{ matrix.jvm }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - run: echo -e "$(ip addr show eth0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)\t$(hostname -f) $(hostname -s)" | sudo tee -a /etc/hosts
      - run: ./gradlew -DsparkVersions=3.5 -DscalaVersion=2.12 -DhiveVersions= -DflinkVersions= :iceberg-delta-lake:check -Pquick=true -x javadoc
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test logs
          path: |
            **/build/testlogs

  delta-conversion-scala-2-13-tests:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        jvm: [8, 11, 17]
    env:
      SPARK_LOCAL_IP: localhost
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: ${{ matrix.jvm }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - run: echo -e "$(ip addr show eth0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)\t$(hostname -f) $(hostname -s)" | sudo tee -a /etc/hosts
      - run: ./gradlew -DsparkVersions=3.5 -DscalaVersion=2.13 -DhiveVersions= -DflinkVersions= :iceberg-delta-lake:check -Pquick=true -x javadoc
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test logs
          path: |
            **/build/testlogs
