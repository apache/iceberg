#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: "Spark CI"
on:
  push:
    branches:
    - 'master'
    - '0.**'
    tags:
    - 'apache-iceberg-**'
  pull_request:
    paths-ignore:
    - '.github/ISSUE_TEMPLATE/iceberg_bug_report.yml'
    - '.github/workflows/python-ci.yml'
    - '.github/workflows/flink-ci.yml'
    - '.github/workflows/hive-ci.yml'
    - '.gitignore'
    - '.asf.yml'
    - 'dev/**'
    - 'mr/**'
    - 'hive3/**'
    - 'hive3-orc-bundle/**'
    - 'hive-runtime/**'
    - 'flink/**'
    - 'pig/**'
    - 'python/**'
    - 'docs/**'
    - 'open-api/**'
    - 'format/**'
    - '.gitattributes'
    - 'README.md'
    - 'CONTRIBUTING.md'
    - 'LICENSE'
    - 'NOTICE'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  spark-3x-scala-2-12-tests:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        jvm: [8, 11]
        spark: ['3.1', '3.2', '3.3', '3.4']
    env:
      SPARK_LOCAL_IP: localhost
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: ${{ matrix.jvm }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - run: echo -e "$(ip addr show eth0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)\t$(hostname -f) $(hostname -s)" | sudo tee -a /etc/hosts
      - run: ./gradlew -DsparkVersions=${{ matrix.spark }} -DscalaVersion=2.12 -DhiveVersions= -DflinkVersions= :iceberg-spark:iceberg-spark-${{ matrix.spark }}_2.12:check :iceberg-spark:iceberg-spark-extensions-${{ matrix.spark }}_2.12:check :iceberg-spark:iceberg-spark-runtime-${{ matrix.spark }}_2.12:check -Pquick=true -x javadoc
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test logs
          path: |
            **/build/testlogs

  spark-3x-scala-2-13-tests:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        jvm: [8, 11]
        spark: ['3.2','3.3','3.4']
    env:
      SPARK_LOCAL_IP: localhost
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: ${{ matrix.jvm }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - run: echo -e "$(ip addr show eth0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)\t$(hostname -f) $(hostname -s)" | sudo tee -a /etc/hosts
      - run: ./gradlew -DsparkVersions=${{ matrix.spark }} -DscalaVersion=2.13 -DhiveVersions= -DflinkVersions= :iceberg-spark:iceberg-spark-${{ matrix.spark }}_2.13:check :iceberg-spark:iceberg-spark-extensions-${{ matrix.spark }}_2.13:check :iceberg-spark:iceberg-spark-runtime-${{ matrix.spark }}_2.13:check -Pquick=true -x javadoc
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test logs
          path: |
            **/build/testlogs

  spark-3x-java-17-tests:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        spark: ['3.3','3.4']
        scala-version: ['2.12', '2.13']
    env:
      SPARK_LOCAL_IP: localhost
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - run: echo -e "$(ip addr show eth0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)\t$(hostname -f) $(hostname -s)" | sudo tee -a /etc/hosts
      - run: ./gradlew -DsparkVersions=${{ matrix.spark }} -DscalaVersion=${{ matrix.scala-version }} -DhiveVersions= -DflinkVersions= :iceberg-spark:iceberg-spark-${{ matrix.spark }}_${{ matrix.scala-version }}:check :iceberg-spark:iceberg-spark-extensions-${{ matrix.spark }}_${{ matrix.scala-version }}:check :iceberg-spark:iceberg-spark-runtime-${{ matrix.spark }}_${{ matrix.scala-version }}:check -Pquick=true -x javadoc
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test logs
          path: |
            **/build/testlogs