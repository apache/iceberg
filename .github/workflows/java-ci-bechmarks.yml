#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: "Java CI Benchmark"
on:
  pull_request:
    types: [ labeled, opened, synchronize, reopened ]
    paths-ignore:
    - '.github/workflows/python-ci.yml'
    - 'python/**'
    - 'python_legacy/**'
    - 'site/**'

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      foundlabel: ${{ steps.set-matrix.outputs.foundlabel }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: |
          cat <<EOF > labels.json
          ${{ toJson(github.event.pull_request.labels.*) }}
          EOF
          matrix=$(cat labels.json | jq '.[] | select(.name | startswith("benchmark-")) | .name' | jq .)
          matrix=$(echo $matrix | sed 's/ /,/g' | sed 's/"/\"/g')
          echo "::set-output name=matrix::[$matrix]"
          echo "::set-output name=foundlabel::$(echo "[$matrix]" | jq 'if . | length > 0 then true else false end')"

  show-matrix:
    needs: matrix
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo ${{ needs.matrix.outputs.matrix }}
          echo ${{ needs.matrix.outputs.foundlabel }}

  run-benchmark:
    if: ${{ needs.matrix.outputs.foundlabel == 'true' }}
    needs: matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        benchmark: ${{ fromJson(needs.matrix.outputs.matrix) }}
    env:
      SPARK_LOCAL_IP: localhost
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - run: echo -e "$(ip addr show eth0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)\t$(hostname -f) $(hostname -s)" | sudo tee -a /etc/hosts

    - name: Get Benchmark to run
      id: get_benchmark
      run: |
        benchmark=$(echo ${{ matrix.benchmark }} | sed 's/benchmark-//g')
        echo "::set-output name=BENCHMARK::${benchmark}Benchmark"

    - name: Run Benchmark
      run: ./gradlew :iceberg-spark:iceberg-spark3:jmh -PjmhIncludeRegex=${{ steps.get_benchmark.outputs.BENCHMARK }} -PjmhOutputPath=benchmark/${{ steps.get_benchmark.outputs.BENCHMARK }}.txt

    - uses: actions/upload-artifact@v2
      with:
        name: benchmark-results
        path: |
          **/benchmark/*.txt
