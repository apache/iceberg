/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

if (JavaVersion.current().isJava11Compatible()) {
    test {
        useJUnitPlatform()
    }
    compileTestJava {
        sourceCompatibility = "11"
        targetCompatibility = "11"
    }
} else {
    // Do not test Nessie against Java 8, because in-JVM testing requires Nessie server components,
    // which require Java 11+.
    test {
        enabled = false
    }
    compileTestJava {
        enabled = false
    }
}

dependencies {
    api project(':iceberg-api')
    implementation project(':iceberg-common')
    implementation project(':iceberg-core')
    implementation project(path: ':iceberg-bundled-guava', configuration: 'shadow')
    implementation(libs.nessie.client) {
        exclude group: 'com.fasterxml.jackson'
    }
    implementation platform(libs.jackson.bom)
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.fasterxml.jackson.core:jackson-core"

    compileOnly libs.hadoop2.common
    // Only there to prevent "warning: unknown enum constant SchemaType.OBJECT" compile messages
    compileOnly libs.microprofile.openapi.api

    if (JavaVersion.current().isJava11Compatible()) {
        testImplementation libs.nessie.jaxrs.testextension
        testImplementation libs.nessie.versioned.storage.inmemory.tests
        testImplementation libs.nessie.versioned.storage.testextension
        // Need to "pull in" el-api explicitly :(
        testImplementation libs.jakarta.el.api

        testImplementation libs.avro.avro

        testImplementation project(path: ':iceberg-api', configuration: 'testArtifacts')
        testImplementation project(path: ':iceberg-core', configuration: 'testArtifacts')

        // Only there to prevent "warning: unknown enum constant SchemaType.OBJECT" compile messages
        testCompileOnly libs.microprofile.openapi.api
    }
}