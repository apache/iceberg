/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.iceberg.flink.sink.committer;

import java.io.Serializable;
import org.apache.iceberg.io.WriteResult;
import org.apache.iceberg.relocated.com.google.common.base.MoreObjects;

/**
 * This object is 2 different objects squashed together because of the Flink SinkV2 api
 * requirements:
 *
 * <ul>
 *   <li>WriterResult - The output files generated by the individual writers. Containing only a
 *       {@link WriteResult}
 *   <li>Committable - The aggregated results of a single checkpoint which should be committed.
 *       Containing the serialized {@link DeltaManifests} file - which contains the commit data, and
 *       the jobId, operatorId, checkpointId triplet which helps identifying the specific commit
 * </ul>
 *
 * {@link SinkV2CommittableSerializer} is used for serializing the objects between the Writer and
 * the Aggregator operator and between the Aggregator and the Committer as well.
 */
public class SinkV2Committable implements Serializable {
  private byte[] manifest;
  private WriteResult writeResult;
  private String jobId = "";
  private String operatorId = "";
  private long checkpointId;

  public SinkV2Committable(WriteResult writeResult) {
    this.writeResult = writeResult;
  }

  public SinkV2Committable(byte[] manifest, String jobId, String operatorId, long checkpointId) {
    this.manifest = manifest;
    this.jobId = jobId;
    this.operatorId = operatorId;
    this.checkpointId = checkpointId;
  }

  public WriteResult writeResult() {
    return writeResult;
  }

  public byte[] manifest() {
    return manifest;
  }

  public String jobId() {
    return jobId;
  }

  public String operatorId() {
    return operatorId;
  }

  public Long checkpointId() {
    return checkpointId;
  }

  @Override
  public String toString() {
    return MoreObjects.toStringHelper(this)
        .add("jobId", jobId)
        .add("checkpointId", checkpointId)
        .toString();
  }
}
