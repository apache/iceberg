/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

dependencies {
    api project(':iceberg-api')
    implementation project(':iceberg-common')
    implementation project(path: ':iceberg-bundled-guava', configuration: 'shadow')
    annotationProcessor "org.immutables:value"
    compileOnly "org.immutables:value"

    implementation("org.apache.avro:avro") {
        exclude group: 'org.tukaani' // xz compression is not supported
    }

    implementation 'io.airlift:aircompressor'
    implementation 'org.apache.httpcomponents.client5:httpclient5'
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.fasterxml.jackson.core:jackson-core"
    implementation "com.github.ben-manes.caffeine:caffeine"
    implementation "org.roaringbitmap:RoaringBitmap"
    compileOnly("org.apache.hadoop:hadoop-client") {
        exclude group: 'org.apache.avro', module: 'avro'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }

    testImplementation "org.eclipse.jetty:jetty-servlet"
    testImplementation "org.eclipse.jetty:jetty-server"
    testImplementation 'org.mock-server:mockserver-netty'
    testImplementation 'org.mock-server:mockserver-client-java'
    testImplementation "org.xerial:sqlite-jdbc"
    testImplementation project(path: ':iceberg-api', configuration: 'testArtifacts')
    testImplementation "com.esotericsoftware:kryo"
    testImplementation "com.google.guava:guava-testlib"
    testImplementation 'org.awaitility:awaitility'
}

test {
    useJUnitPlatform()
}